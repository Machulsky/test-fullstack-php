version: "3.3"



services:
  nginx:
      container_name: nginx
      build:
        context: .
        dockerfile: docker/Nginx.Dockerfile
      ports:
          - 8001:80
      depends_on:
        - fpm
        - mysqldb
      volumes:
        - ./src:/var/www
  worker:
      image: digitalocean.com/php
      container_name: app-worker
      command: composer install && php workers/TweetCreateListener.php --sleep=3 --tries=3 --daemon
      volumes:
        - ./src:/var/www
      restart: always
      working_dir: /var/www
      environment:
        REDIS_HOST: redis
        REDIS_PORT: &redis-port1 6379
      depends_on:
          - mysqldb
          - redis
  nodejs:
      command: node socket.js
      working_dir: /var/www/socket
      image: node
      restart: always
      environment:
        REDIS_HOST: redis
        REDIS_PORT: &redis-port2 6379
      ports:
        - 3000:3000
      volumes:
        - ./src/socket:/var/www/socket
        - ./src/socket/node_modules:/var/www/socket/node_modules
      depends_on:
        - redis

  fpm:
      image: digitalocean.com/php
      container_name: app
      build:
        context: .
        dockerfile: docker/Fpm.Dockerfile
      volumes:
        - ./src:/var/www
      restart: always
      working_dir: /var/www
      environment:
        REDIS_HOST: redis
        REDIS_PORT: &redis-port 6379
      depends_on:
          - mysqldb
          - redis
  redis:
      image: redis:alpine
      container_name: redis
      command: redis-server
      volumes:
          - ./data/redis:/data
      ports: [*redis-port, '16379:6379']
  
  mysqldb:
        image: mysql:5.7.22
        restart: always
        environment:
            - MYSQL_DATABASE=test
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=dev
            - MYSQL_PASSWORD=dev
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
